# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Indev - Build Windows x86, Windows x64, Linux, macOS
on:
  workflow_dispatch:
  pull_request:
    branches: ['main', 'indev']
  push:
    branches: ['main', 'indev']

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2

      - name: Install Make
        run: choco install make

      - name: Configure CMake x64
        run: cmake -B ${{github.workspace}}/build_x64 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build x64
        run: cmake --build ${{github.workspace}}/build_x64 --config ${{env.BUILD_TYPE}}

      - uses: actions/upload-artifact@v4
        with:
          name: Encore_Win_x64-Indev
          path: ${{github.workspace}}/build_x64/Encore/Release/*

  build-windows-x86:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2

      - name: Install Make
        run: choco install make

      - name: Clean previous build files
        run: if (Test-Path build_x86) { Remove-Item -Recurse -Force build_x86 }

      - name: Configure CMake x86
        run: cmake -B ${{github.workspace}}/build_x86 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -A Win32

      - name: Build x86
        run: cmake --build ${{github.workspace}}/build_x86 --config ${{env.BUILD_TYPE}}

      - uses: actions/upload-artifact@v4
        with:
          name: Encore_Win_x86-Indev
          path: ${{github.workspace}}/build_x86/Encore/Release/*

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2

      - name: Update apt-get
        run: sudo apt-get update

      - name: Install Dependencies
        run: sudo apt-get install libasound2-dev libx11-dev libxrandr-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev libxcursor-dev libxinerama-dev libwayland-dev libxkbcommon-dev

      - name: Configure CMake x64
        run: cmake -B ${{github.workspace}}/build_linux_x64 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build x64
        run: cmake --build ${{github.workspace}}/build_linux_x64 --config ${{env.BUILD_TYPE}}

      - name: Remove CMake files x64
        working-directory: ${{github.workspace}}/build_linux_x64/Encore
        run: rm -r -f CMakeFiles Makefile cmake_install.cmake

      - uses: actions/upload-artifact@v4
        with:
          name: Encore_Linux_x64-Indev
          path: ${{github.workspace}}/build_linux_x64/Encore/*

  build-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build_macos -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build_macos --config ${{env.BUILD_TYPE}}

      - name: Remove CMake files
        working-directory: ${{github.workspace}}/build_macos/Encore
        run: rm -r -f CMakeFiles Makefile cmake_install.cmake

      - name: Create .app Bundle
        working-directory: ${{github.workspace}}
        run: ./create-macos-app.sh

      - name: Create Disk Image
        working-directory: ${{github.workspace}}
        run: hdiutil create -volname Encore -srcfolder out -ov -format UDZO Encore.dmg

      - uses: actions/upload-artifact@v4
        with:
          name: Encore_macOS-Indev
          path: ${{github.workspace}}/Encore.dmg